main
  section.py-5.text-center.container
    .row.py-lg-5
      .col-lg-6.col-md-8.mx-auto
        p
          | Channel and video data are a sample output from from Choooks22's vt-api. The API is currently inaccessible until further notice.
          br/
          a href="https://github.com/Choooks22/vt-api" target="_blank"
            | https://github.com/Choooks22/vt-api
        p
          | Application Source Code:
          br/
          a href="https://github.com/androhgomez/vtuber-watcher" target="_blank"
            | https://github.com/androhgomez/vtuber-watcher

    = react_component("VideoGallery", {}, prerender: false)

    /.album.py-5.bg-light
      /.container
        /.row.row-cols-1.row-cols-sm-2.row-cols-md-3.g-3
          /- @videos.each do |video|
            /a.album-card href="https://www.youtube.com/watch?v=#{video[:_id]}" target="_blank"
              /.col
                /.card.shadow-sm
                  /img aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false" src="https://img.youtube.com/vi/#{video[:_id]}/hqdefault.jpg"
                  /.card-body
                    /p.card-text
                      /= video[:title]
                    /.d-flex.justify-content-between.align-items-center
                      /small.text-muted
                        /- if video[:time][:duration].present?
                          /= ActiveSupport::Duration.build((video[:time][:duration] / 1000).seconds).inspect
                        /- elsif video[:time][:scheduled].present?
                          /- scheduled = Time.parse(video[:time][:scheduled])
                          /= "Live on #{scheduled.to_formatted_s(:long)} #{scheduled.zone}"